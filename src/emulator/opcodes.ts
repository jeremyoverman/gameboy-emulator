/* eslint-disable @typescript-eslint/no-unused-vars */
import {CPU} from './cpu'
import { JumpMode } from './instructions'

export const opCodes = {} as const

export type OpCodeDefinition = {
  run: (pc: number, args: Uint8Array) => number | void
  name: string
  length: number
  cycles: number | number[]
} | null

export class OpCodes {
  private cpu: CPU

  constructor(cpu: CPU) {
    this.cpu = cpu
  }

  private notImplemented() {
    throw new Error('Not Implemented')
  }

  opcodes: Record<number, OpCodeDefinition> = {
    0x00: { name: 'NOP',         length: 1, cycles: 4,        run: () => this.cpu.instructions.nop() },
    0x01: { name: 'LD BC,d16',   length: 3, cycles: 12,       run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'bc', source: 'd16' }) },
    0x02: { name: 'LD (BC),A',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'bc', refTarget: true, source: 'a' }) },
    0x03: { name: 'INC BC',      length: 1, cycles: 8,        run: () => this.cpu.instructions.inc('bc') },
    0x04: { name: 'INC B',       length: 1, cycles: 4,        run: () => this.cpu.instructions.inc('b') },
    0x05: { name: 'DEC B',       length: 1, cycles: 4,        run: () => this.cpu.instructions.dec('b') },
    0x06: { name: 'LD B,d8',     length: 2, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'b', source: 'd8' }) },
    0x07: { name: 'RLCA',        length: 1, cycles: 4,        run: () => this.cpu.instructions.rlca() },
    0x08: { name: 'LD (a16),SP', length: 3, cycles: 20,       run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'd16', source: 'sp' }) },
    0x09: { name: 'ADD HL,BC',   length: 1, cycles: 8,        run: () => this.cpu.instructions.add('bc') },
    0x0a: { name: 'LD A,(BC)',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'a', refSource: true, source: 'bc' }) },
    0x0b: { name: 'DEC BC',      length: 1, cycles: 8,        run: () => this.cpu.instructions.dec('bc') },
    0x0c: { name: 'INC C',       length: 1, cycles: 4,        run: () => this.cpu.instructions.inc('c') },
    0x0d: { name: 'DEC C',       length: 1, cycles: 4,        run: () => this.cpu.instructions.dec('c') },
    0x0e: { name: 'LD C,d8',     length: 2, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'c', source: 'd8' }) },
    0x0f: { name: 'RRCA',        length: 1, cycles: 4,        run: () => this.cpu.instructions.rrca() },
    0x10: { name: 'STOP 0',      length: 2, cycles: 4,        run: () => this.cpu.instructions.stop() },
    0x11: { name: 'LD DE,d16',   length: 3, cycles: 12,       run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'de', source: 'd16' }) },
    0x12: { name: 'LD (DE),A',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { refTarget: true, target: 'de', source: 'a'}) },
    0x13: { name: 'INC DE',      length: 1, cycles: 8,        run: () => this.cpu.instructions.inc('de') },
    0x14: { name: 'INC D',       length: 1, cycles: 4,        run: () => this.cpu.instructions.inc('d') },
    0x15: { name: 'DEC D',       length: 1, cycles: 4,        run: () => this.cpu.instructions.dec('d') },
    0x16: { name: 'LD D,d8',     length: 2, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'd', source: 'd8' }) },
    0x17: { name: 'RLA',         length: 1, cycles: 4,        run: () => this.cpu.instructions.rla() },
    0x18: { name: 'JR r8',       length: 2, cycles: 12,       run: (_pc, byte) => this.cpu.instructions.jp(byte, null, true) },
    0x19: { name: 'ADD HL,DE',   length: 1, cycles: 8,        run: () => this.cpu.instructions.add('de') },
    0x1a: { name: 'LD A,(DE)',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'a', refSource: true, source: 'de' }) },
    0x1b: { name: 'DEC DE',      length: 1, cycles: 8,        run: () => this.cpu.instructions.dec('de') },
    0x1c: { name: 'INC E',       length: 1, cycles: 4,        run: () => this.cpu.instructions.inc('e') },
    0x1d: { name: 'DEC E',       length: 1, cycles: 4,        run: () => this.cpu.instructions.dec('e') },
    0x1e: { name: 'LD E,d8',     length: 2, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'e', source: 'd8' }) },
    0x1f: { name: 'RRA',         length: 1, cycles: 4,        run: () => this.cpu.instructions.rra() },
    0x20: { name: 'JR NZ,r8',    length: 2, cycles: [12, 8],  run: (_pc, byte) => this.cpu.instructions.jp(byte, JumpMode.nz, true) },
    0x21: { name: 'LD HL,d16',   length: 3, cycles: 12,       run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'hl', source: 'd16' }) },
    0x22: { name: 'LD (HL+),A',  length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { refTarget: true, target: 'hl', source: 'a', incHl: true }) },
    0x23: { name: 'INC HL',      length: 1, cycles: 8,        run: () => this.cpu.instructions.inc('hl') },
    0x24: { name: 'INC H',       length: 1, cycles: 4,        run: () => this.cpu.instructions.inc('h') },
    0x25: { name: 'DEC H',       length: 1, cycles: 4,        run: () => this.cpu.instructions.dec('h') },
    0x26: { name: 'LD H,d8',     length: 2, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'h', source: 'd8' }) },
    0x27: { name: 'DAA',         length: 1, cycles: 4,        run: () => this.cpu.instructions.daa() },
    0x28: { name: 'JR Z,r8',     length: 2, cycles: [12, 8],  run: (_pc, byte) => this.cpu.instructions.jp(byte, JumpMode.z, true) },
    0x29: { name: 'ADD HL,HL',   length: 1, cycles: 8,        run: () => this.cpu.instructions.add('hl') },
    0x2a: { name: 'LD A,(HL+)',  length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'a', refSource: true, source: 'hl', incHl: true }) },
    0x2b: { name: 'DEC HL',      length: 1, cycles: 8,        run: () => this.cpu.instructions.dec('hl') },
    0x2c: { name: 'INC L',       length: 1, cycles: 4,        run: () => this.cpu.instructions.inc('l') },
    0x2d: { name: 'DEC L',       length: 1, cycles: 4,        run: () => this.cpu.instructions.dec('l') },
    0x2e: { name: 'LD L,d8',     length: 2, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'l', source: 'd8' }) },
    0x2f: { name: 'CPL',         length: 1, cycles: 4,        run: () => this.cpu.instructions.cpl() },
    0x30: { name: 'JR NC,r8',    length: 2, cycles: [12, 8],  run: (_pc, byte) => this.cpu.instructions.jp(byte, JumpMode.nc, true) },
    0x31: { name: 'LD SP,d16',   length: 3, cycles: 12,       run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'sp', source: 'd16' }) },
    0x32: { name: 'LD (HL-),A',  length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { source: 'a', refTarget: true, target: 'hl', decHl: true }) },
    0x33: { name: 'INC SP',      length: 1, cycles: 8,        run: () => this.cpu.instructions.inc('sp') },
    0x34: { name: 'INC (HL)',    length: 1, cycles: 12,       run: () => this.notImplemented() },
    0x35: { name: 'DEC (HL)',    length: 1, cycles: 12,       run: () => this.notImplemented() },
    0x36: { name: 'LD (HL),d8',  length: 2, cycles: 12,       run: (_pc, bytes) => this.cpu.instructions.load(bytes, { refTarget: true, target: 'hl', source: 'd8' }) },
    0x37: { name: 'SCF',         length: 1, cycles: 4,        run: () => this.notImplemented() },
    0x38: { name: 'JR C,r8',     length: 2, cycles: [12, 8],  run: (_pc, byte) => this.cpu.instructions.jp(byte, JumpMode.nc, true) },
    0x39: { name: 'ADD HL,SP',   length: 1, cycles: 8,        run: () => this.cpu.instructions.add('sp') },
    0x3a: { name: 'LD A,(HL-)',  length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'a', refSource: true, source: 'hl', decHl: true }) },
    0x3b: { name: 'DEC SP',      length: 1, cycles: 8,        run: () => this.cpu.instructions.dec('sp') },
    0x3c: { name: 'INC A',       length: 1, cycles: 4,        run: () => this.cpu.instructions.inc('a') },
    0x3d: { name: 'DEC A',       length: 1, cycles: 4,        run: () => this.cpu.instructions.dec('a') },
    0x3e: { name: 'LD A,d8',     length: 2, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'a', source: 'd8' }) },
    0x3f: { name: 'CCF',         length: 1, cycles: 4,        run: () => this.notImplemented() },
    0x40: { name: 'LD B,B',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'b', source: 'b' }) },
    0x41: { name: 'LD B,C',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'b', source: 'c' }) },
    0x42: { name: 'LD B,D',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'b', source: 'd' }) },
    0x43: { name: 'LD B,E',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'b', source: 'e' }) },
    0x44: { name: 'LD B,H',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'b', source: 'h' }) },
    0x45: { name: 'LD B,L',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'b', source: 'l' }) },
    0x46: { name: 'LD B,(HL)',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'b', refSource: true, source: 'hl' }) },
    0x47: { name: 'LD B,A',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'b', source: 'a' }) },
    0x48: { name: 'LD C,B',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'c', source: 'b' }) },
    0x49: { name: 'LD C,C',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'c', source: 'c' }) },
    0x4a: { name: 'LD C,D',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'c', source: 'd' }) },
    0x4b: { name: 'LD C,E',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'c', source: 'e' }) },
    0x4c: { name: 'LD C,H',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'c', source: 'h' }) },
    0x4d: { name: 'LD C,L',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'c', source: 'l' }) },
    0x4e: { name: 'LD C,(HL)',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'c', refSource: true, source: 'hl' }) },
    0x4f: { name: 'LD C,A',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'c', source: 'a' }) },
    0x50: { name: 'LD D,B',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'd', source: 'b' }) },
    0x51: { name: 'LD D,C',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'd', source: 'c' }) },
    0x52: { name: 'LD D,D',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'd', source: 'd' }) },
    0x53: { name: 'LD D,E',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'd', source: 'e' }) },
    0x54: { name: 'LD D,H',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'd', source: 'h' }) },
    0x55: { name: 'LD D,L',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'd', source: 'l' }) },
    0x56: { name: 'LD D,(HL)',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'd', refSource: true, source: 'hl' }) },
    0x57: { name: 'LD D,A',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'd', source: 'a' }) },
    0x58: { name: 'LD E,B',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'e', source: 'b' }) },
    0x59: { name: 'LD E,C',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'e', source: 'c' }) },
    0x5a: { name: 'LD E,D',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'e', source: 'd' }) },
    0x5b: { name: 'LD E,E',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'e', source: 'e' }) },
    0x5c: { name: 'LD E,H',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'e', source: 'h' }) },
    0x5d: { name: 'LD E,L',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'e', source: 'l' }) },
    0x5e: { name: 'LD E,(HL)',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'e', refSource: true, source: 'hl' }) },
    0x5f: { name: 'LD E,A',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'e', source: 'a' }) },
    0x60: { name: 'LD H,B',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'h', source: 'b' }) },
    0x61: { name: 'LD H,C',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'h', source: 'c' }) },
    0x62: { name: 'LD H,D',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'h', source: 'd' }) },
    0x63: { name: 'LD H,E',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'h', source: 'e' }) },
    0x64: { name: 'LD H,H',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'h', source: 'h' }) },
    0x65: { name: 'LD H,L',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'h', source: 'l' }) },
    0x66: { name: 'LD H,(HL)',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'h', refSource: true, source: 'hl' }) },
    0x67: { name: 'LD H,A',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'h', source: 'a' }) },
    0x68: { name: 'LD L,B',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'l', source: 'b' }) },
    0x69: { name: 'LD L,C',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'l', source: 'c' }) },
    0x6a: { name: 'LD L,D',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'l', source: 'd' }) },
    0x6b: { name: 'LD L,E',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'l', source: 'e' }) },
    0x6c: { name: 'LD L,H',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'l', source: 'h' }) },
    0x6d: { name: 'LD L,L',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'l', source: 'l' }) },
    0x6e: { name: 'LD L,(HL)',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'l', refSource: true, source: 'hl' }) },
    0x6f: { name: 'LD L,A',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'l', source: 'a' }) },
    0x70: { name: 'LD (HL),B',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { refTarget: true, target: 'hl', source: 'b' }) },
    0x71: { name: 'LD (HL),C',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { refTarget: true, target: 'hl', source: 'c' }) },
    0x72: { name: 'LD (HL),D',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { refTarget: true, target: 'hl', source: 'd' }) },
    0x73: { name: 'LD (HL),E',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { refTarget: true, target: 'hl', source: 'e' }) },
    0x74: { name: 'LD (HL),H',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { refTarget: true, target: 'hl', source: 'h' }) },
    0x75: { name: 'LD (HL),L',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { refTarget: true, target: 'hl', source: 'l' }) },
    0x76: { name: 'HALT',        length: 1, cycles: 4,        run: () => this.cpu.instructions.halt() },
    0x77: { name: 'LD (HL),A',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { refTarget: true, target: 'hl', source: 'a' }) },
    0x78: { name: 'LD A,B',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'a', source: 'b' }) },
    0x79: { name: 'LD A,C',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'a', source: 'c' }) },
    0x7a: { name: 'LD A,D',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'a', source: 'd' }) },
    0x7b: { name: 'LD A,E',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'a', source: 'e' }) },
    0x7c: { name: 'LD A,H',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'a', source: 'h' }) },
    0x7d: { name: 'LD A,L',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'a', source: 'l' }) },
    0x7e: { name: 'LD A,(HL)',   length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'a', refSource: true, source: 'hl' }) },
    0x7f: { name: 'LD A,A',      length: 1, cycles: 4,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'a', source: 'a' }) },
    0x80: { name: 'ADD A,B',     length: 1, cycles: 4,        run: () => this.cpu.instructions.add('b') },
    0x81: { name: 'ADD A,C',     length: 1, cycles: 4,        run: () => this.cpu.instructions.add('c') },
    0x82: { name: 'ADD A,D',     length: 1, cycles: 4,        run: () => this.cpu.instructions.add('d') },
    0x83: { name: 'ADD A,E',     length: 1, cycles: 4,        run: () => this.cpu.instructions.add('e') },
    0x84: { name: 'ADD A,H',     length: 1, cycles: 4,        run: () => this.cpu.instructions.add('h') },
    0x85: { name: 'ADD A,L',     length: 1, cycles: 4,        run: () => this.cpu.instructions.add('l') },
    0x86: { name: 'ADD A,(HL)',  length: 1, cycles: 8,        run: () => this.notImplemented() },
    0x87: { name: 'ADD A,A',     length: 1, cycles: 4,        run: () => this.cpu.instructions.add('a') },
    0x88: { name: 'ADC A,B',     length: 1, cycles: 4,        run: () => this.cpu.instructions.adc('b') },
    0x89: { name: 'ADC A,C',     length: 1, cycles: 4,        run: () => this.cpu.instructions.adc('c') },
    0x8a: { name: 'ADC A,D',     length: 1, cycles: 4,        run: () => this.cpu.instructions.adc('d') },
    0x8b: { name: 'ADC A,E',     length: 1, cycles: 4,        run: () => this.cpu.instructions.adc('e') },
    0x8c: { name: 'ADC A,H',     length: 1, cycles: 4,        run: () => this.cpu.instructions.adc('h') },
    0x8d: { name: 'ADC A,L',     length: 1, cycles: 4,        run: () => this.cpu.instructions.adc('l') },
    0x8e: { name: 'ADC A,(HL)',  length: 1, cycles: 8,        run: () => this.notImplemented() },
    0x8f: { name: 'ADC A,A',     length: 1, cycles: 4,        run: () => this.cpu.instructions.adc('a') },
    0x90: { name: 'SUB B',       length: 1, cycles: 4,        run: () => this.cpu.instructions.sub('b') },
    0x91: { name: 'SUB C',       length: 1, cycles: 4,        run: () => this.cpu.instructions.sub('c') },
    0x92: { name: 'SUB D',       length: 1, cycles: 4,        run: () => this.cpu.instructions.sub('d') },
    0x93: { name: 'SUB E',       length: 1, cycles: 4,        run: () => this.cpu.instructions.sub('e') },
    0x94: { name: 'SUB H',       length: 1, cycles: 4,        run: () => this.cpu.instructions.sub('h') },
    0x95: { name: 'SUB L',       length: 1, cycles: 4,        run: () => this.cpu.instructions.sub('l') },
    0x96: { name: 'SUB (HL)',    length: 1, cycles: 8,        run: () => this.notImplemented() },
    0x97: { name: 'SUB A',       length: 1, cycles: 4,        run: () => this.cpu.instructions.sub('a') },
    0x98: { name: 'SBC A,B',     length: 1, cycles: 4,        run: () => this.cpu.instructions.sbc('b') },
    0x99: { name: 'SBC A,C',     length: 1, cycles: 4,        run: () => this.cpu.instructions.sbc('c') },
    0x9a: { name: 'SBC A,D',     length: 1, cycles: 4,        run: () => this.cpu.instructions.sbc('d') },
    0x9b: { name: 'SBC A,E',     length: 1, cycles: 4,        run: () => this.cpu.instructions.sbc('e') },
    0x9c: { name: 'SBC A,H',     length: 1, cycles: 4,        run: () => this.cpu.instructions.sbc('h') },
    0x9d: { name: 'SBC A,L',     length: 1, cycles: 4,        run: () => this.cpu.instructions.sbc('l') },
    0x9e: { name: 'SBC A,(HL)',  length: 1, cycles: 8,        run: () => this.notImplemented() },
    0x9f: { name: 'SBC A,A',     length: 1, cycles: 4,        run: () => this.cpu.instructions.sbc('a') },
    0xa0: { name: 'AND B',       length: 1, cycles: 4,        run: () => this.cpu.instructions.and('b') },
    0xa1: { name: 'AND C',       length: 1, cycles: 4,        run: () => this.cpu.instructions.and('c') },
    0xa2: { name: 'AND D',       length: 1, cycles: 4,        run: () => this.cpu.instructions.and('d') },
    0xa3: { name: 'AND E',       length: 1, cycles: 4,        run: () => this.cpu.instructions.and('e') },
    0xa4: { name: 'AND H',       length: 1, cycles: 4,        run: () => this.cpu.instructions.and('h') },
    0xa5: { name: 'AND L',       length: 1, cycles: 4,        run: () => this.cpu.instructions.and('l') },
    0xa6: { name: 'AND (HL)',    length: 1, cycles: 8,        run: () => this.notImplemented() },
    0xa7: { name: 'AND A',       length: 1, cycles: 4,        run: () => this.cpu.instructions.and('a') },
    0xa8: { name: 'XOR B',       length: 1, cycles: 4,        run: () => this.cpu.instructions.xor('b') },
    0xa9: { name: 'XOR C',       length: 1, cycles: 4,        run: () => this.cpu.instructions.xor('c') },
    0xaa: { name: 'XOR D',       length: 1, cycles: 4,        run: () => this.cpu.instructions.xor('d') },
    0xab: { name: 'XOR E',       length: 1, cycles: 4,        run: () => this.cpu.instructions.xor('e') },
    0xac: { name: 'XOR H',       length: 1, cycles: 4,        run: () => this.cpu.instructions.xor('h') },
    0xad: { name: 'XOR L',       length: 1, cycles: 4,        run: () => this.cpu.instructions.xor('l') },
    0xae: { name: 'XOR (HL)',    length: 1, cycles: 8,        run: () => this.notImplemented() },
    0xaf: { name: 'XOR A',       length: 1, cycles: 4,        run: () => this.cpu.instructions.xor('a') },
    0xb0: { name: 'OR B',        length: 1, cycles: 4,        run: () => this.cpu.instructions.or('b') },
    0xb1: { name: 'OR C',        length: 1, cycles: 4,        run: () => this.cpu.instructions.or('c') },
    0xb2: { name: 'OR D',        length: 1, cycles: 4,        run: () => this.cpu.instructions.or('d') },
    0xb3: { name: 'OR E',        length: 1, cycles: 4,        run: () => this.cpu.instructions.or('e') },
    0xb4: { name: 'OR H',        length: 1, cycles: 4,        run: () => this.cpu.instructions.or('h') },
    0xb5: { name: 'OR L',        length: 1, cycles: 4,        run: () => this.cpu.instructions.or('l') },
    0xb6: { name: 'OR (HL)',     length: 1, cycles: 8,        run: () => this.notImplemented() },
    0xb7: { name: 'OR A',        length: 1, cycles: 4,        run: () => this.cpu.instructions.or('a') },
    0xb8: { name: 'CP B',        length: 1, cycles: 4,        run: () => this.cpu.instructions.cp('b') },
    0xb9: { name: 'CP C',        length: 1, cycles: 4,        run: () => this.cpu.instructions.cp('c') },
    0xba: { name: 'CP D',        length: 1, cycles: 4,        run: () => this.cpu.instructions.cp('d') },
    0xbb: { name: 'CP E',        length: 1, cycles: 4,        run: () => this.cpu.instructions.cp('e') },
    0xbc: { name: 'CP H',        length: 1, cycles: 4,        run: () => this.cpu.instructions.cp('h') },
    0xbd: { name: 'CP L',        length: 1, cycles: 4,        run: () => this.cpu.instructions.cp('l') },
    0xbe: { name: 'CP (HL)',     length: 1, cycles: 8,        run: () => this.notImplemented() },
    0xbf: { name: 'CP A',        length: 1, cycles: 4,        run: () => this.cpu.instructions.cp('a') },
    0xc0: { name: 'RET NZ',      length: 1, cycles: [20, 8],  run: () => this.notImplemented() },
    0xc1: { name: 'POP BC',      length: 1, cycles: 12,       run: () => this.cpu.instructions.pop('bc') },
    0xc2: { name: 'JP NZ,a16',   length: 3, cycles: [16, 12], run: (_pc, bytes) => this.cpu.instructions.jp(bytes, JumpMode.nz) },
    0xc3: { name: 'JP a16',      length: 3, cycles: 16,       run: (_pc, bytes) => this.cpu.instructions.jp(bytes) },
    0xc4: { name: 'CALL NZ,a16', length: 3, cycles: [24, 12], run: (_pc, bytes) => this.cpu.instructions.call(bytes, JumpMode.nz) },
    0xc5: { name: 'PUSH BC',     length: 1, cycles: 16,       run: () => this.cpu.instructions.push('bc') },
    0xc6: { name: 'ADD A,d8',    length: 2, cycles: 8,        run: (_pc, [value]) => this.cpu.instructions.add(value) },
    0xc7: { name: 'RST 00H',     length: 1, cycles: 16,       run: (_pc, bytes) => this.cpu.instructions.call(bytes) },
    0xc8: { name: 'RET Z',       length: 1, cycles: [20, 8],  run: () => this.notImplemented() },
    0xc9: { name: 'RET',         length: 1, cycles: 16,       run: () => this.notImplemented() },
    0xca: { name: 'JP Z,a16',    length: 3, cycles: [16, 12], run: (_pc, bytes) => this.cpu.instructions.jp(bytes, JumpMode.z) },
    0xcb: { name: 'PREFIX CB',   length: 1, cycles: 4,        run: () => this.notImplemented() },
    0xcc: { name: 'CALL Z,a16',  length: 3, cycles: [24, 12], run: (_pc, bytes) => this.cpu.instructions.call(bytes, JumpMode.z) },
    0xcd: { name: 'CALL a16',    length: 3, cycles: 24,       run: (_pc, bytes) => this.cpu.instructions.call(bytes) },
    0xce: { name: 'ADC A,d8',    length: 2, cycles: 8,        run: (_pc, [value]) => this.cpu.instructions.adc(value) },
    0xcf: { name: 'RST 08H',     length: 1, cycles: 16,       run: (_pc, bytes) => this.cpu.instructions.call(bytes) },
    0xd0: { name: 'RET NC',      length: 1, cycles: [20, 8],  run: () => this.notImplemented() },
    0xd1: { name: 'POP DE',      length: 1, cycles: 12,       run: () => this.cpu.instructions.pop('de') },
    0xd2: { name: 'JP NC,a16',   length: 3, cycles: [16, 12], run: (_pc, bytes) => this.cpu.instructions.jp(bytes, JumpMode.nc) },
    0xd3: null,
    0xd4: { name: 'CALL NC,a16', length: 3, cycles: [24, 12], run: (_pc, bytes) => this.cpu.instructions.call(bytes, JumpMode.nc) },
    0xd5: { name: 'PUSH DE',     length: 1, cycles: 16,       run: () => this.cpu.instructions.push('de') },
    0xd6: { name: 'SUB d8',      length: 2, cycles: 8,        run: (_pc, [value]) => this.cpu.instructions.sub(value) },
    0xd7: { name: 'RST 10H',     length: 1, cycles: 16,       run: (_pc, bytes) => this.cpu.instructions.call(bytes) },
    0xd8: { name: 'RET C',       length: 1, cycles: [20, 8],  run: () => this.notImplemented() },
    0xd9: { name: 'RETI',        length: 1, cycles: 16,       run: () => this.notImplemented() },
    0xda: { name: 'JP C,a16',    length: 3, cycles: [16, 12], run: (_pc, bytes) => this.cpu.instructions.jp(bytes, JumpMode.c) },
    0xdb: null,
    0xdc: { name: 'CALL C,a16',  length: 3, cycles: [24, 12], run: (_pc, bytes) => this.cpu.instructions.call(bytes, JumpMode.c) },
    0xdd: null,
    0xde: { name: 'SBC A,d8',    length: 2, cycles: 8,        run: (_pc, [value]) => this.cpu.instructions.sbc(value) },
    0xdf: { name: 'RST 18H',     length: 1, cycles: 16,       run: (_pc, bytes) => this.cpu.instructions.call(bytes) },
    0xe0: { name: 'LDH (a8),A',  length: 2, cycles: 12,       run: () => this.notImplemented() },
    0xe1: { name: 'POP HL',      length: 1, cycles: 12,       run: () => this.cpu.instructions.pop('hl') },
    0xe2: { name: 'LD (C),A',    length: 2, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { source: 'a', refTarget: true, target: 'c' }) },
    0xe3: null,
    0xe4: null,
    0xe5: { name: 'PUSH HL',     length: 1, cycles: 16,       run: () => this.cpu.instructions.push('hl') },
    0xe6: { name: 'AND d8',      length: 2, cycles: 8,        run: (_pc, [value]) => this.cpu.instructions.and(value) },
    0xe7: { name: 'RST 20H',     length: 1, cycles: 16,       run: () => this.notImplemented() },
    0xe8: { name: 'ADD SP,r8',   length: 2, cycles: 16,       run: () => this.notImplemented() },
    0xe9: { name: 'JP (HL)',     length: 1, cycles: 4,        run: () => this.cpu.instructions.jp() },
    0xea: { name: 'LD (a16),A',  length: 3, cycles: 16,       run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'd16', source: 'a' }) },
    0xeb: null,
    0xec: null,
    0xed: null,
    0xee: { name: 'XOR d8',      length: 2, cycles: 8,        run: (_pc, [value]) => this.cpu.instructions.xor(value) },
    0xef: { name: 'RST 28H',     length: 1, cycles: 16,       run: () => this.notImplemented() },
    0xf0: { name: 'LDH A,(a8)',  length: 2, cycles: 12,       run: () => this.notImplemented() },
    0xf1: { name: 'POP AF',      length: 1, cycles: 12,       run: () => this.cpu.instructions.pop('af') },
    0xf2: { name: 'LD A,(C)',    length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'a', refSource: true, source: 'c' }) },
    0xf3: { name: 'DI',          length: 1, cycles: 4,        run: () => this.notImplemented() },
    0xf4: null,
    0xf5: { name: 'PUSH AF',     length: 1, cycles: 16,       run: () => this.cpu.instructions.push('af') },
    0xf6: { name: 'OR d8',       length: 2, cycles: 8,        run: (_pc, [value]) => this.cpu.instructions.or(value) },
    0xf7: { name: 'RST 30H',     length: 1, cycles: 16,       run: () => this.notImplemented() },
    0xf8: { name: 'LD HL,SP+r8', length: 2, cycles: 12,       run: () => this.notImplemented() },
    0xf9: { name: 'LD SP,HL',    length: 1, cycles: 8,        run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'sp', source: 'hl' }) },
    0xfa: { name: 'LD A,(a16)',  length: 3, cycles: 16,       run: (_pc, bytes) => this.cpu.instructions.load(bytes, { target: 'a', refSource: true, source: 'd16' }) },
    0xfb: { name: 'EI',          length: 1, cycles: 4,        run: () => this.notImplemented() },
    0xfc: null,
    0xfd: null,
    0xfe: { name: 'CP d8',       length: 2, cycles: 8,        run: (_pc, [value]) => this.cpu.instructions.cp(value) },
    0xff: { name: 'RST 38H',     length: 1, cycles: 16,       run: () => this.notImplemented() },
  }

  prefixOpcodes: Record<number, OpCodeDefinition> = {
    0x00: { name: 'RLC B',       length: 2, cycles: 8,        run: () => this.cpu.instructions.rlc('b') },
    0x01: { name: 'RLC C',       length: 2, cycles: 8,        run: () => this.cpu.instructions.rlc('c') },
    0x02: { name: 'RLC D',       length: 2, cycles: 8,        run: () => this.cpu.instructions.rlc('d') },
    0x03: { name: 'RLC E',       length: 2, cycles: 8,        run: () => this.cpu.instructions.rlc('e') },
    0x04: { name: 'RLC H',       length: 2, cycles: 8,        run: () => this.cpu.instructions.rlc('h') },
    0x05: { name: 'RLC L',       length: 2, cycles: 8,        run: () => this.cpu.instructions.rlc('l') },
    0x06: { name: 'RLC (HL)',    length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x07: { name: 'RLC A',       length: 2, cycles: 8,        run: () => this.cpu.instructions.rlc('a') },
    0x08: { name: 'RRC B',       length: 2, cycles: 8,        run: () => this.cpu.instructions.rrc('b') },
    0x09: { name: 'RRC C',       length: 2, cycles: 8,        run: () => this.cpu.instructions.rrc('c') },
    0x0a: { name: 'RRC D',       length: 2, cycles: 8,        run: () => this.cpu.instructions.rrc('d') },
    0x0b: { name: 'RRC E',       length: 2, cycles: 8,        run: () => this.cpu.instructions.rrc('e') },
    0x0c: { name: 'RRC H',       length: 2, cycles: 8,        run: () => this.cpu.instructions.rrc('h') },
    0x0d: { name: 'RRC L',       length: 2, cycles: 8,        run: () => this.cpu.instructions.rrc('l') },
    0x0e: { name: 'RRC (HL)',    length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x0f: { name: 'RRC A',       length: 2, cycles: 8,        run: () => this.cpu.instructions.rrc('a') },
    0x10: { name: 'RL B',        length: 2, cycles: 8,        run: () => this.cpu.instructions.rl('b') },
    0x11: { name: 'RL C',        length: 2, cycles: 8,        run: () => this.cpu.instructions.rl('c') },
    0x12: { name: 'RL D',        length: 2, cycles: 8,        run: () => this.cpu.instructions.rl('d') },
    0x13: { name: 'RL E',        length: 2, cycles: 8,        run: () => this.cpu.instructions.rl('e') },
    0x14: { name: 'RL H',        length: 2, cycles: 8,        run: () => this.cpu.instructions.rl('h') },
    0x15: { name: 'RL L',        length: 2, cycles: 8,        run: () => this.cpu.instructions.rl('l') },
    0x16: { name: 'RL (HL)',     length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x17: { name: 'RL A',        length: 2, cycles: 8,        run: () => this.cpu.instructions.rl('a') },
    0x18: { name: 'RR B',        length: 2, cycles: 8,        run: () => this.cpu.instructions.rr('b') },
    0x19: { name: 'RR C',        length: 2, cycles: 8,        run: () => this.cpu.instructions.rr('c') },
    0x1a: { name: 'RR D',        length: 2, cycles: 8,        run: () => this.cpu.instructions.rr('d') },
    0x1b: { name: 'RR E',        length: 2, cycles: 8,        run: () => this.cpu.instructions.rr('e') },
    0x1c: { name: 'RR H',        length: 2, cycles: 8,        run: () => this.cpu.instructions.rr('h') },
    0x1d: { name: 'RR L',        length: 2, cycles: 8,        run: () => this.cpu.instructions.rr('l') },
    0x1e: { name: 'RR (HL)',     length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x1f: { name: 'RR A',        length: 2, cycles: 8,        run: () => this.cpu.instructions.rr('a') },
    0x20: { name: 'SLA B',       length: 2, cycles: 8,        run: () => this.cpu.instructions.sla('b') },
    0x21: { name: 'SLA C',       length: 2, cycles: 8,        run: () => this.cpu.instructions.sla('c') },
    0x22: { name: 'SLA D',       length: 2, cycles: 8,        run: () => this.cpu.instructions.sla('d') },
    0x23: { name: 'SLA E',       length: 2, cycles: 8,        run: () => this.cpu.instructions.sla('e') },
    0x24: { name: 'SLA H',       length: 2, cycles: 8,        run: () => this.cpu.instructions.sla('h') },
    0x25: { name: 'SLA L',       length: 2, cycles: 8,        run: () => this.cpu.instructions.sla('l') },
    0x26: { name: 'SLA (HL)',    length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x27: { name: 'SLA A',       length: 2, cycles: 8,        run: () => this.cpu.instructions.sla('a') },
    0x28: { name: 'SRA B',       length: 2, cycles: 8,        run: () => this.cpu.instructions.sra('b') },
    0x29: { name: 'SRA C',       length: 2, cycles: 8,        run: () => this.cpu.instructions.sra('c') },
    0x2a: { name: 'SRA D',       length: 2, cycles: 8,        run: () => this.cpu.instructions.sra('d') },
    0x2b: { name: 'SRA E',       length: 2, cycles: 8,        run: () => this.cpu.instructions.sra('e') },
    0x2c: { name: 'SRA H',       length: 2, cycles: 8,        run: () => this.cpu.instructions.sra('h') },
    0x2d: { name: 'SRA L',       length: 2, cycles: 8,        run: () => this.cpu.instructions.sra('l') },
    0x2e: { name: 'SRA (HL)',    length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x2f: { name: 'SRA A',       length: 2, cycles: 8,        run: () => this.cpu.instructions.sra('a') },
    0x30: { name: 'SWAP B',      length: 2, cycles: 8,        run: () => this.cpu.instructions.swap('b') },
    0x31: { name: 'SWAP C',      length: 2, cycles: 8,        run: () => this.cpu.instructions.swap('c') },
    0x32: { name: 'SWAP D',      length: 2, cycles: 8,        run: () => this.cpu.instructions.swap('d') },
    0x33: { name: 'SWAP E',      length: 2, cycles: 8,        run: () => this.cpu.instructions.swap('e') },
    0x34: { name: 'SWAP H',      length: 2, cycles: 8,        run: () => this.cpu.instructions.swap('h') },
    0x35: { name: 'SWAP L',      length: 2, cycles: 8,        run: () => this.cpu.instructions.swap('l') },
    0x36: { name: 'SWAP (HL)',   length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x37: { name: 'SWAP A',      length: 2, cycles: 8,        run: () => this.cpu.instructions.swap('a') },
    0x38: { name: 'SRL B',       length: 2, cycles: 8,        run: () => this.cpu.instructions.srl('b') },
    0x39: { name: 'SRL C',       length: 2, cycles: 8,        run: () => this.cpu.instructions.srl('c') },
    0x3a: { name: 'SRL D',       length: 2, cycles: 8,        run: () => this.cpu.instructions.srl('d') },
    0x3b: { name: 'SRL E',       length: 2, cycles: 8,        run: () => this.cpu.instructions.srl('e') },
    0x3c: { name: 'SRL H',       length: 2, cycles: 8,        run: () => this.cpu.instructions.srl('h') },
    0x3d: { name: 'SRL L',       length: 2, cycles: 8,        run: () => this.cpu.instructions.srl('l') },
    0x3e: { name: 'SRL (HL)',    length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x3f: { name: 'SRL A',       length: 2, cycles: 8,        run: () => this.cpu.instructions.srl('a') },
    0x40: { name: 'BIT 0,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('b', 0)},
    0x41: { name: 'BIT 0,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('c', 0)},
    0x42: { name: 'BIT 0,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('d', 0)},
    0x43: { name: 'BIT 0,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('e', 0)},
    0x44: { name: 'BIT 0,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('h', 0)},
    0x45: { name: 'BIT 0,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('l', 0)},
    0x46: { name: 'BIT 0,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x47: { name: 'BIT 0,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('a', 0)},
    0x48: { name: 'BIT 1,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('b', 1)},
    0x49: { name: 'BIT 1,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('c', 1)},
    0x4a: { name: 'BIT 1,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('d', 1)},
    0x4b: { name: 'BIT 1,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('e', 1)},
    0x4c: { name: 'BIT 1,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('h', 1)},
    0x4d: { name: 'BIT 1,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('l', 1)},
    0x4e: { name: 'BIT 1,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x4f: { name: 'BIT 1,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('a', 1)},
    0x50: { name: 'BIT 2,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('b', 2)},
    0x51: { name: 'BIT 2,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('c', 2)},
    0x52: { name: 'BIT 2,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('d', 2)},
    0x53: { name: 'BIT 2,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('e', 2)},
    0x54: { name: 'BIT 2,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('h', 2)},
    0x55: { name: 'BIT 2,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('l', 2)},
    0x56: { name: 'BIT 2,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x57: { name: 'BIT 2,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('a', 2)},
    0x58: { name: 'BIT 3,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('b', 3)},
    0x59: { name: 'BIT 3,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('c', 3)},
    0x5a: { name: 'BIT 3,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('d', 3)},
    0x5b: { name: 'BIT 3,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('e', 3)},
    0x5c: { name: 'BIT 3,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('h', 3)},
    0x5d: { name: 'BIT 3,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('l', 3)},
    0x5e: { name: 'BIT 3,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x5f: { name: 'BIT 3,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('a', 3)},
    0x60: { name: 'BIT 4,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('b', 4)},
    0x61: { name: 'BIT 4,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('c', 4)},
    0x62: { name: 'BIT 4,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('d', 4)},
    0x63: { name: 'BIT 4,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('e', 4)},
    0x64: { name: 'BIT 4,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('h', 4)},
    0x65: { name: 'BIT 4,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('l', 4)},
    0x66: { name: 'BIT 4,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x67: { name: 'BIT 4,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('a', 4)},
    0x68: { name: 'BIT 5,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('b', 5)},
    0x69: { name: 'BIT 5,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('c', 5)},
    0x6a: { name: 'BIT 5,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('d', 5)},
    0x6b: { name: 'BIT 5,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('e', 5)},
    0x6c: { name: 'BIT 5,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('h', 5)},
    0x6d: { name: 'BIT 5,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('l', 5)},
    0x6e: { name: 'BIT 5,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x6f: { name: 'BIT 5,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('a', 5)},
    0x70: { name: 'BIT 6,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('b', 6)},
    0x71: { name: 'BIT 6,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('c', 6)},
    0x72: { name: 'BIT 6,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('d', 6)},
    0x73: { name: 'BIT 6,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('e', 6)},
    0x74: { name: 'BIT 6,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('h', 6)},
    0x75: { name: 'BIT 6,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('l', 6)},
    0x76: { name: 'BIT 6,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x77: { name: 'BIT 6,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('a', 6)},
    0x78: { name: 'BIT 7,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('b', 7)},
    0x79: { name: 'BIT 7,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('c', 7)},
    0x7a: { name: 'BIT 7,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('d', 7)},
    0x7b: { name: 'BIT 7,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('e', 7)},
    0x7c: { name: 'BIT 7,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('h', 7)},
    0x7d: { name: 'BIT 7,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('l', 7)},
    0x7e: { name: 'BIT 7,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x7f: { name: 'BIT 7,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.bit('a', 7)},
    0x80: { name: 'RES 0,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('b', 0)},
    0x81: { name: 'RES 0,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('c', 0)},
    0x82: { name: 'RES 0,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('d', 0)},
    0x83: { name: 'RES 0,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('e', 0)},
    0x84: { name: 'RES 0,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('h', 0)},
    0x85: { name: 'RES 0,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('l', 0)},
    0x86: { name: 'RES 0,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x87: { name: 'RES 0,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('a', 0)},
    0x88: { name: 'RES 1,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('b', 1)},
    0x89: { name: 'RES 1,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('c', 1)},
    0x8a: { name: 'RES 1,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('d', 1)},
    0x8b: { name: 'RES 1,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('e', 1)},
    0x8c: { name: 'RES 1,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('h', 1)},
    0x8d: { name: 'RES 1,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('l', 1)},
    0x8e: { name: 'RES 1,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x8f: { name: 'RES 1,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('a', 1)},
    0x90: { name: 'RES 2,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('b', 2)},
    0x91: { name: 'RES 2,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('c', 2)},
    0x92: { name: 'RES 2,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('d', 2)},
    0x93: { name: 'RES 2,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('e', 2)},
    0x94: { name: 'RES 2,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('h', 2)},
    0x95: { name: 'RES 2,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('l', 2)},
    0x96: { name: 'RES 2,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x97: { name: 'RES 2,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('a', 2)},
    0x98: { name: 'RES 3,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('b', 3)},
    0x99: { name: 'RES 3,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('c', 3)},
    0x9a: { name: 'RES 3,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('d', 3)},
    0x9b: { name: 'RES 3,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('e', 3)},
    0x9c: { name: 'RES 3,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('h', 3)},
    0x9d: { name: 'RES 3,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('l', 3)},
    0x9e: { name: 'RES 3,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0x9f: { name: 'RES 3,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('a', 3)},
    0xa0: { name: 'RES 4,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('b', 4)},
    0xa1: { name: 'RES 4,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('c', 4)},
    0xa2: { name: 'RES 4,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('d', 4)},
    0xa3: { name: 'RES 4,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('e', 4)},
    0xa4: { name: 'RES 4,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('h', 4)},
    0xa5: { name: 'RES 4,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('l', 4)},
    0xa6: { name: 'RES 4,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0xa7: { name: 'RES 4,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('a', 4)},
    0xa8: { name: 'RES 5,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('b', 5)},
    0xa9: { name: 'RES 5,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('c', 5)},
    0xaa: { name: 'RES 5,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('d', 5)},
    0xab: { name: 'RES 5,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('e', 5)},
    0xac: { name: 'RES 5,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('h', 5)},
    0xad: { name: 'RES 5,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('l', 5)},
    0xae: { name: 'RES 5,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0xaf: { name: 'RES 5,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('a', 5)},
    0xb0: { name: 'RES 6,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('b', 6)},
    0xb1: { name: 'RES 6,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('c', 6)},
    0xb2: { name: 'RES 6,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('d', 6)},
    0xb3: { name: 'RES 6,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('e', 6)},
    0xb4: { name: 'RES 6,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('h', 6)},
    0xb5: { name: 'RES 6,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('l', 6)},
    0xb6: { name: 'RES 6,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0xb7: { name: 'RES 6,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('a', 6)},
    0xb8: { name: 'RES 7,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('b', 7)},
    0xb9: { name: 'RES 7,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('c', 7)},
    0xba: { name: 'RES 7,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('d', 7)},
    0xbb: { name: 'RES 7,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('e', 7)},
    0xbc: { name: 'RES 7,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('h', 7)},
    0xbd: { name: 'RES 7,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('l', 7)},
    0xbe: { name: 'RES 7,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0xbf: { name: 'RES 7,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.reset('a', 7)},
    0xc0: { name: 'SET 0,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('b', 0)},
    0xc1: { name: 'SET 0,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('c', 0)},
    0xc2: { name: 'SET 0,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('d', 0)},
    0xc3: { name: 'SET 0,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('e', 0)},
    0xc4: { name: 'SET 0,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('h', 0)},
    0xc5: { name: 'SET 0,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('l', 0)},
    0xc6: { name: 'SET 0,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0xc7: { name: 'SET 0,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('a', 0)},
    0xc8: { name: 'SET 1,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('b', 1)},
    0xc9: { name: 'SET 1,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('c', 1)},
    0xca: { name: 'SET 1,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('d', 1)},
    0xcb: { name: 'SET 1,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('e', 1)},
    0xcc: { name: 'SET 1,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('h', 1)},
    0xcd: { name: 'SET 1,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('l', 1)},
    0xce: { name: 'SET 1,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0xcf: { name: 'SET 1,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('a', 1)},
    0xd0: { name: 'SET 2,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('b', 2)},
    0xd1: { name: 'SET 2,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('c', 2)},
    0xd2: { name: 'SET 2,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('d', 2)},
    0xd3: { name: 'SET 2,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('e', 2)},
    0xd4: { name: 'SET 2,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('h', 2)},
    0xd5: { name: 'SET 2,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('l', 2)},
    0xd6: { name: 'SET 2,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0xd7: { name: 'SET 2,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('a', 2)},
    0xd8: { name: 'SET 3,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('b', 3)},
    0xd9: { name: 'SET 3,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('c', 3)},
    0xda: { name: 'SET 3,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('d', 3)},
    0xdb: { name: 'SET 3,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('e', 3)},
    0xdc: { name: 'SET 3,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('h', 3)},
    0xdd: { name: 'SET 3,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('l', 3)},
    0xde: { name: 'SET 3,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0xdf: { name: 'SET 3,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('a', 3)},
    0xe0: { name: 'SET 4,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('b', 4)},
    0xe1: { name: 'SET 4,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('c', 4)},
    0xe2: { name: 'SET 4,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('d', 4)},
    0xe3: { name: 'SET 4,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('e', 4)},
    0xe4: { name: 'SET 4,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('h', 4)},
    0xe5: { name: 'SET 4,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('l', 4)},
    0xe6: { name: 'SET 4,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0xe7: { name: 'SET 4,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('a', 4)},
    0xe8: { name: 'SET 5,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('b', 5)},
    0xe9: { name: 'SET 5,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('c', 5)},
    0xea: { name: 'SET 5,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('d', 5)},
    0xeb: { name: 'SET 5,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('e', 5)},
    0xec: { name: 'SET 5,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('h', 5)},
    0xed: { name: 'SET 5,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('l', 5)},
    0xee: { name: 'SET 5,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0xef: { name: 'SET 5,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('a', 5)},
    0xf0: { name: 'SET 6,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('b', 6)},
    0xf1: { name: 'SET 6,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('c', 6)},
    0xf2: { name: 'SET 6,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('d', 6)},
    0xf3: { name: 'SET 6,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('e', 6)},
    0xf4: { name: 'SET 6,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('h', 6)},
    0xf5: { name: 'SET 6,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('l', 6)},
    0xf6: { name: 'SET 6,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0xf7: { name: 'SET 6,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('a', 6)},
    0xf8: { name: 'SET 7,B',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('b', 7)},
    0xf9: { name: 'SET 7,C',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('c', 7)},
    0xfa: { name: 'SET 7,D',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('d', 7)},
    0xfb: { name: 'SET 7,E',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('e', 7)},
    0xfc: { name: 'SET 7,H',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('h', 7)},
    0xfd: { name: 'SET 7,L',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('l', 7)},
    0xfe: { name: 'SET 7,(HL)',  length: 2, cycles: 16,       run: () => this.notImplemented()},
    0xff: { name: 'SET 7,A',     length: 2, cycles: 8,        run: () => this.cpu.instructions.set('a', 7)},
  }
}
